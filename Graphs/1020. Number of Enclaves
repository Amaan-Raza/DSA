void dfs(int i, int j, vector<vector<int>>& mat, int delRow[], int delCol[]){
        int n = mat.size(), m = mat[0].size();
        //vis[i][j] = 1;
        mat[i][j] = 0;
        for(int k = 0; k < 4; k++){
            int nrow = i + delRow[k];
            int ncol = j + delCol[k];
            if(nrow >= 0 && ncol >= 0 && nrow < n && ncol < m  && mat[nrow][ncol] == 1){
                dfs(nrow,ncol,mat,delRow,delCol);
            }
        }
    }
    
    
    int numEnclaves(vector<vector<int>>& mat) {
        int n = mat.size(), m = mat[0].size();
        //vector<vector<int>> vis(n,vector<int>(m,0));
        int delrow[] = {-1,0,1,0};
        int delcol[] = {0,1,0,-1};
        for(int j = 0 ; j<m;j++) {
            if( mat[0][j] == 1) {
                dfs(0, j, mat, delrow, delcol); 
            }
            
            if( mat[n-1][j] == 1) {
                dfs(n-1,j,mat, delrow, delcol); 
            }
        }
        
        for(int i = 0;i<n;i++) {
             
            if( mat[i][0] == 1) {
                dfs(i, 0, mat, delrow, delcol); 
            }
            
            if( mat[i][m-1] == 1) {
                dfs(i, m-1, mat, delrow, delcol); 
            }
        }
        int cnt = 0;
        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(mat[i][j] == 1) cnt ++;
            }
        }
        return cnt;
    }
