class Solution {
private:
    int fsearch(vector<int>& nums, int target) {
        int s = 0, e = nums.size()-1, res = -1;
        while(s <= e){
            int mid = s + (e-s)/2;
            if(target == nums[mid]){
                res = mid;
                e = mid-1;
            }
            else if(target < nums[mid]) e = mid-1;
            else s = mid + 1;
        }
        return res;
    }
    int lsearch(vector<int>& nums, int target) {
        int s = 0, e = nums.size()-1, res = -1;
        while(s <= e){
            int mid = s + (e-s)/2;
            if(target == nums[mid]){
                res = mid;
                s = mid+1;
            }
            else if(target < nums[mid]) e = mid-1;
            else s = mid + 1;
        }
        return res;
    }    
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int first = fsearch(nums, target);
        int last = lsearch(nums, target);
        return {first,last};
    }
};
